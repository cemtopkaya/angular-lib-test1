{"version":3,"file":"company.js","sources":["ng://company/lib/material.module.ts","ng://company/lib/services/company.service.ts","ng://company/lib/company-list/company-list.component.ts","ng://company/lib/company-details/company-details.component.ts","ng://company/lib/company-container/company-container.component.ts","ng://company/lib/services/settings.service.ts","ng://company/lib/company-settings/company-settings.component.ts","ng://company/lib/company.module.ts","ng://company/company.ts"],"sourcesContent":["import {A11yModule} from '@angular/cdk/a11y';\nimport {DragDropModule} from '@angular/cdk/drag-drop';\nimport {ScrollingModule} from '@angular/cdk/scrolling';\nimport {CdkStepperModule} from '@angular/cdk/stepper';\nimport {CdkTableModule} from '@angular/cdk/table';\nimport {CdkTreeModule} from '@angular/cdk/tree';\nimport {NgModule} from '@angular/core';\nimport {\n  MatAutocompleteModule,\n  MatBadgeModule,\n  MatBottomSheetModule,\n  MatButtonModule,\n  MatButtonToggleModule,\n  MatCardModule,\n  MatCheckboxModule,\n  MatChipsModule,\n  MatDatepickerModule,\n  MatDialogModule,\n  MatDividerModule,\n  MatExpansionModule,\n  MatGridListModule,\n  MatIconModule,\n  MatInputModule,\n  MatListModule,\n  MatMenuModule,\n  MatNativeDateModule,\n  MatPaginatorModule,\n  MatProgressBarModule,\n  MatProgressSpinnerModule,\n  MatRadioModule,\n  MatRippleModule,\n  MatSelectModule,\n  MatSidenavModule,\n  MatSliderModule,\n  MatSlideToggleModule,\n  MatSnackBarModule,\n  MatSortModule,\n  MatStepperModule,\n  MatTableModule,\n  MatTabsModule,\n  MatToolbarModule,\n  MatTooltipModule,\n  MatTreeModule,\n} from '@angular/material';\n\n@NgModule({\n  exports: [\n    A11yModule,\n    CdkStepperModule,\n    CdkTableModule,\n    CdkTreeModule,\n    DragDropModule,\n    MatAutocompleteModule,\n    MatBadgeModule,\n    MatBottomSheetModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatStepperModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatTreeModule,\n    ScrollingModule,\n  ]\n})\nexport class DemoMaterialModule {}\n\n\n/**  Copyright 2018 Google Inc. All Rights Reserved.\n    Use of this source code is governed by an MIT-style license that\n    can be found in the LICENSE file at http://angular.io/license */","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { Observable, of, from } from 'rxjs';\nimport { find, first, filter, map, delay, concatMap } from 'rxjs/operators';\nimport { Company } from '../models/company';\n\n@Injectable()\nexport class CompanyService {\n  rootPath = '../../../../src/';\n  constructor(private http: HttpClient) {}\n\n  getCompany(id: number): Observable<Company[]> {\n    console.log('gelen id:', id);\n    return this.temp_getCompany(id);\n  }\n\n  temp_getCompany(id: number): any {\n    return from(this.http.get(this.rootPath + 'assets/companies.json')).pipe(\n      delay(1)\n    );\n  }\n\n  temp_getCompany1(id: number): any {\n    return this.http.get(this.rootPath + 'assets/companies.json');\n  }\n\n  getCompanies(): Observable<any> {\n    return this.http.get('../../assets/companies.json');\n  }\n}\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { animate, state, style, transition, trigger } from '@angular/animations';\n\nimport { CompanyService } from '../services/company.service';\nimport { Company } from '../models/company';\n\ntype PaneType = 'left' | 'right';\n\n@Component({\n  selector: 'company-list',\n  templateUrl: './company-list.component.html',\n  styleUrls: ['./company-list.component.css'],\n  animations: [\n    trigger('slide', [\n      state('left', style({ transform: 'translateX(0)' })),\n      state('right', style({ transform: 'translateX(-50%)' })),\n      transition('* => *', animate(300))\n    ])\n  ]\n})\nexport class CompanyListComponent {// implements OnInit {\n  @Input() activePane: PaneType = 'left';\n\n  isCompanySelected = false;\n  companies = [];\n  selectedCompany: any;\n  backtothelist = true;\n  constructor(private _compService: CompanyService) {\n  }\n\nslideViews(){  \n    console.log(\"this.activePane: \",this.activePane)\n    this.activePane = this.activePane === 'left' ? 'right' : 'left';\n}\n  onSelection(company: any) {\n    this.slideViews();\n    this.isCompanySelected = true\n    this.selectedCompany = company;\n    console.log(\"selected comp\"+this.selectedCompany);\n  }\n\n  ngOnInit() {\n    this._compService.getCompanies()\n      .subscribe(result => {\n        this.companies = result;\n      });\n    console.log(\"comp list ngOninit\");\n  }\n\n  onReturnToList(count) {\n    this.slideViews();\n    console.log(count);\n    this.isCompanySelected = false;\n  }\n}","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { CompanyService } from '../services/company.service';\nimport { Company } from '../models/company';\n\n@Component({\n  selector: 'company-details',\n  templateUrl: './company-details.component.html',\n  styleUrls: ['./company-details.component.css']\n})\nexport class CompanyDetailsComponent {\n  company: Company;\n  isCompanySelected = false;\n  //animation\n  display_loading = 'block';\n  display_view = 'none';\n  @Output() returnToList = new EventEmitter();\n  returnBackToList() {\n       //animation\n    this.display_view = 'none';\n    this.returnToList.emit(null);\n  }\n\n  constructor(private _companyService: CompanyService) { }\n  private _companyId = 0;\n  get companyId(): number { return this._companyId; }\n  @Input('companyId')\n  set companyId(value: number) {\n     //animation\n    this.display_loading = 'block';\n    this.display_view = 'none';\n\n    this._companyId = +value;\n    this._companyService.getCompany(this.companyId)\n      .subscribe((c: Company[]) => {\n        this.isCompanySelected = true;\n         //animation\n        this.display_loading = 'none';\n        this.display_view = 'block';\n\n        this.company = c.find(a => a.id == this._companyId);\n      })\n  }\n}\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-company-container',\n  templateUrl: './company-container.component.html',\n  styleUrls: ['./company-container.component.css']\n})\nexport class CompanyContainerComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n  flipped = false;\n  flipIt() {\n    this.flipped = !this.flipped;\n  }\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { Observable, of, from } from 'rxjs';\r\nimport { find, first, filter, map, delay, concatMap } from 'rxjs/operators';\r\n\r\n\r\n@Injectable()\r\nexport class SettingsService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getSettings(): Observable<any> {\r\n    return this.http.get<any[]>(\"../../assets/settings.json\");\r\n  }\r\n\r\n}\r\n\r\n","import { Component, OnInit } from '@angular/core';\nimport { SettingsService } from '../services/settings.service';\n\ninterface ICompanySettings {\n  data: string[];\n}\n@Component({\n  selector: 'app-company-settings',\n  templateUrl: './company-settings.component.html',\n  styleUrls: ['./company-settings.component.css']\n})\nexport class CompanySettingsComponent implements OnInit {\n  settings: ICompanySettings;\n  constructor(private _setService: SettingsService) {}\n\n  ngOnInit() {\n    this.fetchSettings();\n  }\n  fetchSettings() {\n    this._setService.getSettings().subscribe(result => {\n      this.settings = result;\n    });\n    console.log('settings: ' + this.settings);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DemoMaterialModule } from './material.module';\n\n\nimport { CompanyListComponent } from './company-list/company-list.component';\nimport { CompanyDetailsComponent } from './company-details/company-details.component';\nimport { CompanyContainerComponent } from './company-container/company-container.component';\nimport { CompanySettingsComponent } from './company-settings/company-settings.component';\n\nimport { CompanyService } from './services/company.service';\nimport { SettingsService } from './services/settings.service';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    DemoMaterialModule\n  ],\n  exports: [\n    CompanyContainerComponent,\n  ],\n  bootstrap: [\n    CompanyContainerComponent\n  ],\n  declarations: [\n    CompanyListComponent,\n    CompanyDetailsComponent,\n    CompanyContainerComponent,\n    CompanySettingsComponent\n  ],\n  providers: [\n    CompanyService,\n    SettingsService\n  ]\n})\nclass CompanyModule { }\n\nexport {\n  CompanyModule,\n  CompanyService,\n  SettingsService\n}","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":["tslib_1.__decorate"],"mappings":"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"}